{
  "version": 4,
  "terraform_version": "1.9.7",
  "serial": 205,
  "lineage": "a94b5194-49b7-b4d1-723b-1d107500da9c",
  "outputs": {},
  "resources": [
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "calico",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "hetzner_ccm",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/164380692/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.20.0/ccm-networks.yaml",
                "content_type": "application/x-yaml",
                "created_at": "2024-07-08 10:37:16 +0000 UTC",
                "id": 178330798,
                "label": "",
                "name": "ccm-networks.yaml",
                "node_id": "RA_kwDOBxR_Mc4KoRyu",
                "size": 3131,
                "updated_at": "2024-07-08 10:37:16 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/178330798"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.20.0/ccm.yaml",
                "content_type": "application/x-yaml",
                "created_at": "2024-07-08 10:37:16 +0000 UTC",
                "id": 178330799,
                "label": "",
                "name": "ccm.yaml",
                "node_id": "RA_kwDOBxR_Mc4KoRyv",
                "size": 2867,
                "updated_at": "2024-07-08 10:37:16 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/178330799"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.20.0/hcloud-cloud-controller-manager-1.20.0.tgz",
                "content_type": "application/x-compressed-tar",
                "created_at": "2024-07-08 10:37:16 +0000 UTC",
                "id": 178330796,
                "label": "",
                "name": "hcloud-cloud-controller-manager-1.20.0.tgz",
                "node_id": "RA_kwDOBxR_Mc4KoRys",
                "size": 4442,
                "updated_at": "2024-07-08 10:37:16 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/178330796"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.20.0/hcloud-cloud-controller-manager_1.20.0_checksums.txt",
                "content_type": "text/plain; charset=utf-8",
                "created_at": "2024-07-08 10:37:16 +0000 UTC",
                "id": 178330797,
                "label": "",
                "name": "hcloud-cloud-controller-manager_1.20.0_checksums.txt",
                "node_id": "RA_kwDOBxR_Mc4KoRyt",
                "size": 372,
                "updated_at": "2024-07-08 10:37:16 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/assets/178330797"
              }
            ],
            "assets_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/164380692/assets",
            "body": "## [1.20.0](https://github.com/hetznercloud/hcloud-cloud-controller-manager/compare/v1.19.0...v1.20.0) (2024-07-08)\n\n\n### Features\n\n* add support \u0026 tests for Kubernetes 1.29 ([#600](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/600)) ([e8fabda](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/e8fabda9ab2e607bcb9a88a7e4e3454d10f1e2a0))\n* add support \u0026 tests for Kubernetes 1.30 ([#679](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/679)) ([0748b6e](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/0748b6e4457227cea77c733b897ce63e0aa0da9b))\n* drop tests for kubernetes v1.25 ([#597](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/597)) ([58261ec](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/58261ec84252da0291770095081fbf49c3e6f659))\n* drop tests for kubernetes v1.26 ([#680](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/680)) ([9c4be01](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/9c4be01659d8ed2607c410639fa8719aedb22c2a))\n* emit Kubernetes events for error conditions ([#598](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/598)) ([e8f9199](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/e8f9199975fe4a458f962a73caa4e4a7091093ee))\n* **helm,manifests:** only specify container args instead of command ([#691](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/691)) ([2ba4058](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/2ba40588d3b3b44ac3c0fa4ff9ae9e9fd3336cc9))\n* **helm:** allow setting affinity for deployment ([#686](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/686)) ([1a8ea95](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/1a8ea95571a0048c96160756b0d1c40f1a8a8b70))\n* read HCLOUD_TOKEN from file ([#652](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/652)) ([a4343b8](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/a4343b84ea3fc6662f1f263f41325eea2e749c41))\n\n\n### Bug Fixes\n\n* **routes:** many requests for outdated routes by rate limiting ([#675](https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/675)) ([e283b7d](https://github.com/hetznercloud/hcloud-cloud-controller-manager/commit/e283b7deea83bc8bd9b20ad8d098884da3eda554))",
            "created_at": "2024-07-08 10:32:32 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/tag/v1.20.0",
            "id": "164380692",
            "name": "v1.20.0",
            "owner": "hetznercloud",
            "prerelease": false,
            "published_at": "2024-07-08 10:32:46 +0000 UTC",
            "release_id": null,
            "release_tag": "v1.20.0",
            "repository": "hcloud-cloud-controller-manager",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/tarball/v1.20.0",
            "target_commitish": "dfef3663fcb76203e8020e3255df8428d46df3aa",
            "upload_url": "https://uploads.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/164380692/assets{?name,label}",
            "url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/releases/164380692",
            "zipball_url": "https://api.github.com/repos/hetznercloud/hcloud-cloud-controller-manager/zipball/v1.20.0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "hetzner_csi",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/169342040/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/hetznercloud/csi-driver/releases/download/v2.9.0/csi-driver_2.9.0_checksums.txt",
                "content_type": "text/plain; charset=utf-8",
                "created_at": "2024-08-08 14:24:31 +0000 UTC",
                "id": 184703114,
                "label": "",
                "name": "csi-driver_2.9.0_checksums.txt",
                "node_id": "RA_kwDOCa6nks4LAliK",
                "size": 306,
                "updated_at": "2024-08-08 14:24:31 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/assets/184703114"
              },
              {
                "browser_download_url": "https://github.com/hetznercloud/csi-driver/releases/download/v2.9.0/hcloud-csi-2.9.0.tgz",
                "content_type": "application/x-compressed-tar",
                "created_at": "2024-08-08 14:24:31 +0000 UTC",
                "id": 184703113,
                "label": "",
                "name": "hcloud-csi-2.9.0.tgz",
                "node_id": "RA_kwDOCa6nks4LAliJ",
                "size": 12690,
                "updated_at": "2024-08-08 14:24:31 +0000 UTC",
                "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/assets/184703113"
              }
            ],
            "assets_url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/169342040/assets",
            "body": "## [2.9.0](https://github.com/hetznercloud/csi-driver/compare/v2.8.0...v2.9.0) (2024-08-08)\n\n\n### Features\n\n* truncate poll exponential backoff function to max 10s ([#674](https://github.com/hetznercloud/csi-driver/issues/674)) ([5785418](https://github.com/hetznercloud/csi-driver/commit/57854187478ee5bfb5f6eff91173dc54f7f04f39))\n\n\n### Bug Fixes\n\n* xfs options compatibility between alpine and node kernel ([#689](https://github.com/hetznercloud/csi-driver/issues/689)) ([13d853b](https://github.com/hetznercloud/csi-driver/commit/13d853bfe821dc155df8c9eb30074107f732fa2e)), closes [#648](https://github.com/hetznercloud/csi-driver/issues/648)",
            "created_at": "2024-08-08 14:16:54 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/hetznercloud/csi-driver/releases/tag/v2.9.0",
            "id": "169342040",
            "name": "v2.9.0",
            "owner": "hetznercloud",
            "prerelease": false,
            "published_at": "2024-08-08 14:17:11 +0000 UTC",
            "release_id": null,
            "release_tag": "v2.9.0",
            "repository": "csi-driver",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/hetznercloud/csi-driver/tarball/v2.9.0",
            "target_commitish": "9df9704aa9f668a4900a9764a0654ee31babd319",
            "upload_url": "https://uploads.github.com/repos/hetznercloud/csi-driver/releases/169342040/assets{?name,label}",
            "url": "https://api.github.com/repos/hetznercloud/csi-driver/releases/169342040",
            "zipball_url": "https://api.github.com/repos/hetznercloud/csi-driver/zipball/v2.9.0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "github_release",
      "name": "kured",
      "provider": "provider[\"registry.terraform.io/integrations/github\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "asserts_url": "https://api.github.com/repos/kubereboot/kured/releases/166954227/assets",
            "assets": [
              {
                "browser_download_url": "https://github.com/kubereboot/kured/releases/download/1.16.0/kured-1.16.0-dockerhub.yaml",
                "content_type": "application/yaml",
                "created_at": "2024-07-24 16:18:48 +0000 UTC",
                "id": 181589377,
                "label": "",
                "name": "kured-1.16.0-dockerhub.yaml",
                "node_id": "RA_kwDOBUgOWc4K0tWB",
                "size": 5021,
                "updated_at": "2024-07-24 16:18:49 +0000 UTC",
                "url": "https://api.github.com/repos/kubereboot/kured/releases/assets/181589377"
              }
            ],
            "assets_url": "https://api.github.com/repos/kubereboot/kured/releases/166954227/assets",
            "body": "## Documentation\r\n\r\n- add best practices badge (#927)\r\n\r\n\r\n## Build and Testing\r\n\r\n- bump x/net dependency (#925)\r\n- bump kubernetes-versions to 0.29.x (#926)\r\n- build(deps): bump aquasecurity/trivy-action from 0.18.0 to 0.19.0\r\n- build(deps): bump github.com/prometheus/common from 0.48.0 to 0.52.3 (#921)\r\n- build(deps): bump github.com/prometheus/common from 0.52.3 to 0.53.0 (#922)\r\n- build(deps): bump helm/kind-action from 1.9.0 to 1.10.0\r\n- build(deps): bump lycheeverse/lychee-action from 1.9.3 to 1.10.0\r\n- build(deps): bump github.com/prometheus/client_golang (#932)\r\n- build(deps): bump alpine from 3.19.1 to 3.20.0\r\n- build(deps): bump aquasecurity/trivy-action from 0.19.0 to 0.21.0\r\n- build(deps): bump github.com/prometheus/common from 0.53.0 to 0.54.0\r\n- build(deps): bump github.com/spf13/viper from 1.18.2 to 1.19.0\r\n- build(deps): bump aquasecurity/trivy-action from 0.21.0 to 0.22.0\r\n- build(deps): bump docker/build-push-action from 5 to 6\r\n- build(deps): bump github.com/spf13/cobra from 1.8.0 to 1.8.1\r\n- build(deps): bump aquasecurity/trivy-action from 0.22.0 to 0.23.0\r\n- build(deps): bump alpine from 3.20.0 to 3.20.1\r\n- build(deps): bump github.com/prometheus/common from 0.54.0 to 0.55.0\r\n- build(deps): bump aquasecurity/trivy-action from 0.23.0 to 0.24.0 (#953)\r\n- build(deps): bump alpine from 3.20.1 to 3.20.2\r\n\r\n\r\n## Kubernetes Version Compatibility\r\n\r\nThe daemon image contains a 1.29.x k8s.io/{client-go,kubectl} for the purposes of maintaining the lock and draining worker nodes. Kubernetes aims to provide forwards \u0026 backwards compatibility of one minor version between client and server, so this should work on 1.28.x, 1.29.x and 1.30.x\r\n\r\nThanks a lot to everyone who contributed to kured since 1.15.1.\r\n",
            "created_at": "2024-07-24 16:14:49 +0000 UTC",
            "draft": false,
            "html_url": "https://github.com/kubereboot/kured/releases/tag/1.16.0",
            "id": "166954227",
            "name": "Kured 1.16.0",
            "owner": "kubereboot",
            "prerelease": false,
            "published_at": "2024-07-24 18:22:41 +0000 UTC",
            "release_id": null,
            "release_tag": "1.16.0",
            "repository": "kured",
            "retrieve_by": "latest",
            "tarball_url": "https://api.github.com/repos/kubereboot/kured/tarball/1.16.0",
            "target_commitish": "main",
            "upload_url": "https://uploads.github.com/repos/kubereboot/kured/releases/166954227/assets{?name,label}",
            "url": "https://api.github.com/repos/kubereboot/kured/releases/166954227",
            "zipball_url": "https://api.github.com/repos/kubereboot/kured/zipball/1.16.0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_image",
      "name": "microos_arm_snapshot",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "arm",
            "created": "2024-10-04T20:08:35Z",
            "deprecated": null,
            "description": "OpenSUSE MicroOS ARM by Kube-Hetzner",
            "id": 191091760,
            "include_deprecated": false,
            "labels": {
              "creator": "kube-hetzner",
              "microos-snapshot": "yes"
            },
            "most_recent": true,
            "name": "",
            "os_flavor": "ubuntu",
            "os_version": "",
            "rapid_deploy": false,
            "selector": null,
            "type": "snapshot",
            "with_architecture": "arm",
            "with_selector": "microos-snapshot=yes",
            "with_status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_image",
      "name": "microos_x86_snapshot",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86",
            "created": "2024-10-04T20:08:10Z",
            "deprecated": null,
            "description": "OpenSUSE MicroOS x86 by Kube-Hetzner",
            "id": 191091671,
            "include_deprecated": false,
            "labels": {
              "creator": "kube-hetzner",
              "microos-snapshot": "yes"
            },
            "most_recent": true,
            "name": "",
            "os_flavor": "ubuntu",
            "os_version": "",
            "rapid_deploy": false,
            "selector": null,
            "type": "snapshot",
            "with_architecture": "x86",
            "with_selector": "microos-snapshot=yes",
            "with_status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_network",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "expose_routes_to_vswitch": false,
            "id": 10207901,
            "ip_range": "10.0.0.0/8",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "most_recent": null,
            "name": "k3s",
            "with_selector": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "data",
      "type": "hcloud_ssh_keys",
      "name": "keys_by_selector",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_firewall",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "apply_to": [],
            "id": "1650228",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s",
            "rule": [
              {
                "description": "Allow Incoming ICMP Ping Requests",
                "destination_ips": [],
                "direction": "in",
                "port": "",
                "protocol": "icmp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Incoming Requests to Kube API Server",
                "destination_ips": [],
                "direction": "in",
                "port": "6443",
                "protocol": "tcp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Incoming SSH Traffic",
                "destination_ips": [],
                "direction": "in",
                "port": "22",
                "protocol": "tcp",
                "source_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ]
              },
              {
                "description": "Allow Outbound HTTP Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "80",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound HTTPS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "443",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound ICMP Ping Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "",
                "protocol": "icmp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound TCP DNS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "53",
                "protocol": "tcp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound UDP DNS Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "53",
                "protocol": "udp",
                "source_ips": []
              },
              {
                "description": "Allow Outbound UDP NTP Requests",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "123",
                "protocol": "udp",
                "source_ips": []
              },
              {
                "description": "To Allow ArgoCD access to resources via SSH",
                "destination_ips": [
                  "0.0.0.0/0",
                  "::/0"
                ],
                "direction": "out",
                "port": "22",
                "protocol": "tcp",
                "source_ips": []
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": [
              {
                "type": "round_robin"
              }
            ],
            "delete_protection": false,
            "id": "2089190",
            "ipv4": "128.140.27.242",
            "ipv6": "2a01:4f8:c01e:a11::1",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "load_balancer_type": "lb11",
            "location": "fsn1",
            "name": "k3s-nginx",
            "network_id": null,
            "network_ip": null,
            "network_zone": "eu-central",
            "target": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_load_balancer_network",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "expose_routes_to_vswitch": false,
            "id": "10207901",
            "ip_range": "10.0.0.0/8",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network_subnet",
      "name": "agent",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10207901-10.0.0.0/16",
            "ip_range": "10.0.0.0/16",
            "network_id": 10207901,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_network_subnet",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "10207901-10.255.0.0/16",
            "ip_range": "10.255.0.0/16",
            "network_id": 10207901,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "agent",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "398582",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s-agent-1",
            "servers": [],
            "type": "spread"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "agent_named",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "control_plane",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "398583",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s-control-plane-1",
            "servers": [],
            "type": "spread"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_placement_group",
      "name": "control_plane_named",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": []
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "hcloud_ssh_key",
      "name": "k3s",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "fingerprint": "47:c5:3d:1a:5f:71:d7:ad:9a:e1:81:f2:df:25:9f:07",
            "id": "23413335",
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform"
            },
            "name": "k3s",
            "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID5zEmSLuMJHOyEESYfJMDp6xWdyQgRd471KjZVoxDzH nikol@DESKTOP-UENSRKJ\n"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "cert_manager_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "installCRDs: true\r\n",
            "content_base64": null,
            "content_base64sha256": "Ek4wWz5CVA9ZpU6yatKC02oMRWAK/q/2c+1FDJDt9jo=",
            "content_base64sha512": "q4f9H4JhqrFIy94B8uDBhVpCxhrMt8RXC7rePDtLu17lWsgc4ruMTa4vaUMnZb41t2hThNk4A7+PQ3k9VaJELQ==",
            "content_md5": "9117d39fff55981d9ee95810e4583679",
            "content_sha1": "ac6919f7bef900593c1ac21af7a7090d91858a23",
            "content_sha256": "124e305b3e42540f59a54eb26ad282d36a0c45600afeaff673ed450c90edf63a",
            "content_sha512": "ab87fd1f8261aab148cbde01f2e0c1855a42c61accb7c4570bbade3c3b4bbb5ee55ac81ce2bb8c4dae2f69432765be35b7685384d93803bf8f43793d55a2442d",
            "directory_permission": "0777",
            "file_permission": "600",
            "filename": "cert_manager_values.yaml",
            "id": "ac6919f7bef900593c1ac21af7a7090d91858a23",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "kustomization_backup",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"kustomize.config.k8s.io/v1beta1\"\n\"kind\": \"Kustomization\"\n\"patches\":\n- \"patch\": \"apiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  name: system-upgrade-controller\\r\\n\n    \\ namespace: system-upgrade\\r\\nspec:\\r\\n  template:\\r\\n    spec:\\r\\n      containers:\\r\\n\n    \\       - name: system-upgrade-controller\\r\\n          volumeMounts:\\r\\n            -\n    name: ca-certificates\\r\\n              mountPath: /var/lib/ca-certificates\\r\\n\n    \\     volumes:\\r\\n        - name: ca-certificates\\r\\n          hostPath:\\r\\n            path:\n    /var/lib/ca-certificates\\r\\n            type: Directory\\r\\n\"\n  \"target\":\n    \"group\": \"apps\"\n    \"kind\": \"Deployment\"\n    \"name\": \"system-upgrade-controller\"\n    \"namespace\": \"system-upgrade\"\n    \"version\": \"v1\"\n- \"patch\": \"- op: replace\\r\\n  path: /spec/template/spec/containers/0/image\\r\\n  value:\n    rancher/system-upgrade-controller:v0.13.4\\r\\n\"\n  \"target\":\n    \"group\": \"apps\"\n    \"kind\": \"Deployment\"\n    \"name\": \"system-upgrade-controller\"\n    \"namespace\": \"system-upgrade\"\n    \"version\": \"v1\"\n- \"path\": \"kured.yaml\"\n- \"path\": \"ccm.yaml\"\n\"resources\":\n- \"https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.20.0/ccm-networks.yaml\"\n- \"https://github.com/kubereboot/kured/releases/download/1.16.0/kured-1.16.0-dockerhub.yaml\"\n- \"https://raw.githubusercontent.com/rancher/system-upgrade-controller/9e7e45c1bdd528093da36be1f1f32472469005e6/manifests/system-upgrade-controller.yaml\"\n- \"hcloud-csi.yaml\"\n- \"nginx_ingress.yaml\"\n- \"cert_manager.yaml\"\n- \"rancher.yaml\"\n",
            "content_base64": null,
            "content_base64sha256": "nLt+1maXrHU+o02khikAC4xHoph4kzWgOQUIx5W/O2A=",
            "content_base64sha512": "t42/WsHTvrdxktOUpGLPckSAyk41KZR2ISpv5Bzx4RtYo7IWG9mW/efAvcck1QA7/A4reimglBUSwXCUjizKSQ==",
            "content_md5": "4d9f21b151e3101f88e1a6bae19db88e",
            "content_sha1": "2c78395ce1d1129c0ef239efdd5697f7e6959471",
            "content_sha256": "9cbb7ed66697ac753ea34da48629000b8c47a298789335a0390508c795bf3b60",
            "content_sha512": "b78dbf5ac1d3beb77192d394a462cf724480ca4e35299476212a6fe41cf1e11b58a3b2161bd996fde7c0bdc724d5003bfc0e2b7a29a0941512c170948e2cca49",
            "directory_permission": "0777",
            "file_permission": "600",
            "filename": "k3s_kustomization_backup.yaml",
            "id": "2c78395ce1d1129c0ef239efdd5697f7e6959471",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "dependencies": [
            "module.kube-hetzner.data.github_release.calico",
            "module.kube-hetzner.data.github_release.hetzner_ccm",
            "module.kube-hetzner.data.github_release.kured"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "local_file",
      "name": "nginx_values",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "controller:\r\n  watchIngressWithoutClass: \"true\"\r\n  kind: \"Deployment\"\r\n  replicaCount: 1\r\n  config:\r\n    \"use-forwarded-headers\": \"true\"\r\n    \"compute-full-forwarded-for\": \"true\"\r\n    \"use-proxy-protocol\": \"true\"\r\n  service:\r\n    annotations:\r\n      \"load-balancer.hetzner.cloud/name\": \"k3s-nginx\"\r\n      \"load-balancer.hetzner.cloud/use-private-ip\": \"true\"\r\n      \"load-balancer.hetzner.cloud/disable-private-ingress\": \"true\"\r\n      \"load-balancer.hetzner.cloud/disable-public-network\": \"false\"\r\n      \"load-balancer.hetzner.cloud/ipv6-disabled\": \"false\"\r\n      \"load-balancer.hetzner.cloud/location\": \"fsn1\"\r\n      \"load-balancer.hetzner.cloud/type\": \"lb11\"\r\n      \"load-balancer.hetzner.cloud/uses-proxyprotocol\": \"true\"\r\n      \"load-balancer.hetzner.cloud/algorithm-type\": \"round_robin\"\r\n      \"load-balancer.hetzner.cloud/health-check-interval\": \"15s\"\r\n      \"load-balancer.hetzner.cloud/health-check-timeout\": \"10s\"\r\n      \"load-balancer.hetzner.cloud/health-check-retries\": \"3\"\r\n",
            "content_base64": null,
            "content_base64sha256": "eIo9avEbQ0Ia492g0WL8jTbtmHVuA0z8MK0zoDn3+To=",
            "content_base64sha512": "aFs25UpcDPXoFsl115VURd4YbhvaCZPyu2yBFGAPJqLOMFEQn/jAfPmD4BpA0UIN0/Om2bzaASBjoOITvLg1DQ==",
            "content_md5": "0a5fd7ea5c838fd37a7e070467bfc4d9",
            "content_sha1": "f0dc16d53c436b2b7816d43ad90924090947ebbf",
            "content_sha256": "788a3d6af11b43421ae3dda0d162fc8d36ed98756e034cfc30ad33a039f7f93a",
            "content_sha512": "685b36e54a5c0cf5e816c975d7955445de186e1bda0993f2bb6c8114600f26a2ce3051109ff8c07cf983e01a40d1420dd3f3a6d9bcda012063a0e213bcb8350d",
            "directory_permission": "0777",
            "file_permission": "600",
            "filename": "nginx_values.yaml",
            "id": "f0dc16d53c436b2b7816d43ad90924090947ebbf",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "random_password",
      "name": "k3s_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$bX0O4GA.3AP459yiIDjRXunoBhiXhS0YW8h4nqog4tANB3Jc2W3Vm",
            "id": "none",
            "keepers": null,
            "length": 48,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "ZlNSu81gX97snnroXcmk9MFQIGLFw2agbCE3BAdjCRsKNSx3",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner",
      "mode": "managed",
      "type": "random_password",
      "name": "rancher_bootstrap",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$xSC2LCpWZg4xZ4i4eofKd.tB.602OxuYIJQ6.PEEJZjhMKIqM0CYS",
            "id": "none",
            "keepers": null,
            "length": 48,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "xGtmQ8mVzyjAHm8qH1in56Uc6BJfJL4T0jtvoMIyPK2aKa6p",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "3520916872",
            "part": [
              {
                "content": "#cloud-config\r\n\r\ndebug: True\r\n\r\nwrite_files:\r\n\r\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\r\n- path: /etc/cloud/rename_interface.sh\r\n  content: |\r\n    #!/bin/bash\r\n    set -euo pipefail\r\n\r\n    sleep 11\r\n\r\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\r\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\r\n\r\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\r\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\r\n    EOF\r\n\r\n    ip link set $INTERFACE down\r\n    ip link set $INTERFACE name eth1\r\n    ip link set eth1 up\r\n\r\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\r\n    nmcli connection modify \"$eth0_connection\" \\\r\n      con-name eth0 \\\r\n      connection.interface-name eth0\r\n\r\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\r\n    nmcli connection modify \"$eth1_connection\" \\\r\n      con-name eth1 \\\r\n      connection.interface-name eth1\r\n\r\n    systemctl restart NetworkManager\r\n  permissions: \"0744\"\r\n\r\n# Disable ssh password authentication\r\n- content: |\r\n    Port 22\r\n    PasswordAuthentication no\r\n    X11Forwarding no\r\n    MaxAuthTries 2\r\n    AllowTcpForwarding no\r\n    AllowAgentForwarding no\r\n    AuthorizedKeysFile .ssh/authorized_keys\r\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\r\n\r\n# Set reboot method as \"kured\"\r\n- content: |\r\n    REBOOT_METHOD=kured\r\n  path: /etc/transactional-update.conf\r\n\r\n# Create Rancher repo config\r\n- content: |\r\n    [rancher-k3s-common-stable]\r\n    name=Rancher K3s Common (stable)\r\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\r\n    enabled=1\r\n    gpgcheck=1\r\n    repo_gpgcheck=0\r\n    gpgkey=https://rpm.rancher.io/public.key\r\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\r\n\r\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\r\n- path: /root/kube_hetzner_selinux.te\r\n  content: |\r\n    module kube_hetzner_selinux 1.0;\r\n\r\n    require {\r\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\r\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\r\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\r\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\r\n            container_var_run_t;\r\n        class key { read view };\r\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\r\n        class sock_file { watch write create unlink };\r\n        class unix_dgram_socket create;\r\n        class unix_stream_socket { connectto read write };\r\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\r\n        class lnk_file { read create };\r\n        class system module_request;\r\n        class filesystem associate;\r\n        class bpf map_create;\r\n        class io_uring sqpoll;\r\n        class anon_inode { create map read write };\r\n        class tcp_socket name_connect;\r\n        class chr_file { open read write };\r\n    }\r\n\r\n    #============= kernel_generic_helper_t ==============\r\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\r\n    allow kernel_generic_helper_t kernel_t:key { read view };\r\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\r\n\r\n    #============= iscsid_t ==============\r\n    allow iscsid_t iscsid_exec_t:file execute;\r\n    allow iscsid_t var_run_t:sock_file write;\r\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\r\n\r\n    #============= init_t ==============\r\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\r\n    allow init_t unlabeled_t:lnk_file create;\r\n    allow init_t container_t:file { open read };\r\n    allow init_t container_file_t:file { execute execute_no_trans };\r\n    allow init_t fuse_device_t:chr_file { open read write };\r\n    allow init_t http_port_t:tcp_socket name_connect;\r\n\r\n    #============= systemd_logind_t ==============\r\n    allow systemd_logind_t unlabeled_t:dir search;\r\n\r\n    #============= systemd_hostnamed_t ==============\r\n    allow systemd_hostnamed_t unlabeled_t:dir search;\r\n\r\n    #============= container_t ==============\r\n    allow container_t { cert_t container_log_t }:dir read;\r\n    allow container_t { cert_t container_log_t }:lnk_file read;\r\n    allow container_t cert_t:file { read open };\r\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\r\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\r\n    allow container_t etc_t:file { create setattr unlink write };\r\n    allow container_t etc_t:sock_file { create unlink };\r\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\r\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\r\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\r\n    allow container_t container_file_t:sock_file watch;\r\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\r\n    allow container_t container_share_t:dir { read write add_name remove_name };\r\n    allow container_t container_share_t:file { read write create unlink };\r\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\r\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\r\n    allow container_t kernel_t:system module_request;\r\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\r\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\r\n    allow container_t var_lib_t:dir { add_name write read };\r\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\r\n    allow container_t proc_t:filesystem associate;\r\n    allow container_t self:bpf map_create;\r\n    allow container_t self:io_uring sqpoll;\r\n    allow container_t io_uring_t:anon_inode { create map read write };\r\n    allow container_t container_var_run_t:dir { add_name remove_name write };\r\n    allow container_t container_var_run_t:file { create open read rename unlink write };\r\n\r\n# Create the k3s registries file if needed\r\n\r\n# Create k3s registries file\r\n- content: IA==\r\n  encoding: base64\r\n  path: /etc/rancher/k3s/registries.yaml\r\n\r\n\r\n# Apply new DNS config\r\n\r\n# Set prepare for manual dns config\r\n- content: |\r\n    [main]\r\n    dns=none\r\n  path: /etc/NetworkManager/conf.d/dns.conf\r\n\r\n- content: |\r\n        nameserver 1.1.1.1\r\n        nameserver 8.8.8.8\r\n        nameserver 2606:4700:4700::1111\r\n    \r\n  path: /etc/resolv.conf\r\n  permissions: '0644'\r\n\r\n\r\n\r\n# Add ssh authorized keys\r\nssh_authorized_keys:\r\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID5zEmSLuMJHOyEESYfJMDp6xWdyQgRd471KjZVoxDzH nikol@DESKTOP-UENSRKJ\n\r\n\r\n# Resize /var, not /, as that's the last partition in MicroOS image.\r\ngrowpart:\r\n    devices: [\"/var\"]\r\n\r\n# Make sure the hostname is set correctly\r\nhostname: k3s-agent-small-cxm\r\npreserve_hostname: true\r\n\r\nruncmd:\r\n\r\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\r\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\r\n\r\n# SELinux permission for the SSH alternative port\r\n\r\n\r\n# Create and apply the necessary SELinux module for kube-hetzner\r\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\r\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\r\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\r\n- [setsebool, '-P', 'virt_use_samba', '1']\r\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\r\n\r\n# Disable rebootmgr service as we use kured instead\r\n- [systemctl, disable, '--now', 'rebootmgr.service']\r\n\r\n\r\n# Set the dns manually\r\n- [systemctl, 'reload', 'NetworkManager']\r\n\r\n\r\n# Bounds the amount of logs that can survive on the system\r\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\r\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\r\n\r\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\r\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\r\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\r\n\r\n# Allow network interface\r\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\r\n\r\n# Restart the sshd service to apply the new config\r\n- [systemctl, 'restart', 'sshd']\r\n\r\n# Make sure the network is up\r\n- [systemctl, restart, NetworkManager]\r\n- [systemctl, status, NetworkManager]\r\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\r\n\r\n# Cleanup some logs\r\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\r\n\r\n\r\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "H4sIAAAAAAAA/7Ra/3PbuHL/3TP+H7ZKZpTXSqJlO0mrPLVVbOXiS2SnlnLtXZpyIGIl4UQCPACUrPjyv3cAghRJUZJzMy+ZsURi97OLxX4DoCvBNXLdnmxi7EGUhJrFRGovYg9I38BUJJwSuek3Rjej4du7z7fXg/tfGyfmqf0LSsUE70G3c3Z6cnrSbheJTk8y7GumYqGYtrREaxIsIuT6DcxYiJxE2G8wznQnmM0bW66JJFzNULaHPBCU8XkPXk+ZLhBYlTU+aC8IRULbgeAzNj89GbEId5R7VqY5PaE4TeY9mMgEzeNaMo2+0Uj1LD2MA8liDVqAtFqCXiDEkq2IRmBco5yRAM046kUXCKeQcDbbwC3qtZDLEeFkjhICwTkGZvbAScT4/PSkDTHRix54qINUeS+V4ee4HbU4PQHDbCbbgz/NE8Czf/KmjHtTkg4DKNTQxkRAzGKcERYa5e1AiBhDt5s939xOhvfvBlfD/vMXLIaQ8SWohVjDn0DWS2h6/3fR8x5jybiG5+ffm/AnKKTQVF7P8+bNv6Uoo8FV//mLgGjw1EZ5QUiU8jhq73mO7xFKJSr1t0yyof7734d37+Df0xknFFeeTEJUHeq9PmvHZq2UXVSOumNHUtbx57fjX8eT4ajfb3DUjRYMriY3d7f9foNQ2mjB9f3NL8P7cb/f+I9/NqOTyf2jk/+93288Hw2uGi24HYyG/YZZpkaKO7x7l2mX2wI1bCcBVKz5QQLrEgZyl8r6QxJnElAvzvytF/Sfv+BREDJoz+Gn4e3wfvCxc3V3ezu0MwOKKxZgujSG0xk+ZSn4UiSocbbG8wp8A/435bDO087UPCu9drSd3N22dAWtu39Z6+5TtO4e17r7RK1zL1cbpTEKdAgSlSZSV6LRUMUoI6ZMdlA9aJy9vrxspBF/zRSZhghKLSAmSq2FpEASvUCuWUCMbBO71Zj8JKSG83P34PgGJTbgIh3+n273nZBrIk1Gy9+OyIOhn0iGChzQIAzFehLENeR2aDBHrusGE70Qkn1D+gE36h0LETpKLTySv/eXuLHxVUhChkKpBfXTBNmh3jKZYnuB+htH2TFvXVZEDRKnQmiIUC8EBaKgsUwk0kadce6Hb+/uJv5oOHl/d923dBXR2iR6YleWhO0kpkRjQeCVRJNw7wkPFihBYiwgy+K74r7IlK69vFDtQESR4G2lzap+dR5p6k0G9uFCwZUlghcplfPbKVGYyLC/0DpWPc+TcdRxyB0mvOWF8lJ6L5XhRSyQQiiPCyIDl5qRGwradxliHs+DBQbL7NnMxM9fnuVES9zskxsn05AFnSVuKjb8toljzwCajLprgo4ZKpnT1DKzwr5bYV9hyHjy0NFoy3IL9IJoIMbTFDAO4+FHM27KHRfa1T+UCGumF7AikolEAUekSEGhNOlAFSqdFEJ7eyTWFbpI0CSs19GU9DdZwEv8I2ES4THLEwB6EyMsUXIMfd2CKePmw72YI0fJAn+BYYzSDDAVKEYL3/ABA/O4ItKXCc++hmzq69ZWjM36nGkznvCQTDFEC5PmIOqHYs546c1CKG0c0L40MyaMWyXKqAFKXabYygfUVrlEyTKJWbXym1DMd6HzUbUgssIgE65ZhLkBdkcyU1hkiKWwdEz4iWTcvpslCv20GphH48h+LOx89mmS2/nNlsI2FrDEDTyCREJhxXAN33cozKzhEUSMPKUzuicas0+fC98mGAhSx7dFOhTBMuvqbOMHJI6RG8fVRGtp1tPQzd3jmuhgUSNdiWDpOxVSmhTNyXIou3wJZw8+nUsS+QYCteOoJ1Ra4pbyMauEtjEl1IncFUKZhEcglPp2nk6nbEpFOxCaGUNiJFbou+8xkcg1yMhAVUyj0CQ6J3yffUKem8dKcTrUGNIGiAt638Q0ql13sN15SkmUEgGrM9k0nkFEYn+PRTNfBfVHLMJwZ5xwwX3GBTVKO30jEh82tQ7ibHlsF+9WaIcuWEh/x2PLoN+zxPasX/y3L31BiaqfstqsvZfD5sOeVaMaJG+ewp9l1t6+6DzMrjCc9Q4EQO3ssxx9YLo5SSmLl+b5ppY+Tz+9bTjbNTlGXhOceWjunYgtGIemkRIUCkqvEsilGHWhaWOxbP8aoDwcS7FRIi8Upd6Op9YKqFagjG1vIq5FKZWN3hPipMRdqDK9/bFYuyDVYn1gaXZIq4uUrsMxSYUm4AnCitQ/Jq+wlAfkFKkeXedR7SHguxVnVuHNX+DN3e4gQMreK5YLu/bf93PstkcZu0vcVedxVc6Wvayezct1bb8423gdCsZS7Ve1rcM+1LLalVJb5/i7EMVepL7/2OW0TWR1Sv/IRuGYKk5/1405TbJMclijHzTavrRVdRmnSiY7k2LF/wB6obQYh3gCo42eH9TqmLPtdP9u7YvIdZ79I4jFAD7UDR/CKm9ESpB7y8qTk0W+l6kr4Ee6613cvBs61MLusuW7qGr0ZYmqkFbsotYU4Hq8cgqwfrr1ntxRrJTKLucIus2ve7Q9rltNdj6o23Gl0t1n78CmYJfHNp+1O4Q9tPXbhV3i7Ra49wM7iGM1Le0zj5acH4PbVyJdHt3Jn9VTowsFEudMaXtaadHYzJ38lKhrKEtHdjeDtBXB/IJnShS+uqycbbnjLHvotoXrbEhk7zqMwEEchxvguIbr2zFs73jS48o4LVAwExIiwhMSAuXq0CFiRBh354WUqz4XHCtKlU+VPYPVoR7lKj+53IUFd/yoUK5QQrdj/9eO/WvH/q8dO3919qp3+frsLP3T63a7DqRqOFQiXDmFKsfezbNXl5fN1H7WgpTaY+/tKTGkp8RKLfzK0XHPoLUNeRvp+cuX3X+DwWAwuLq4/UauuuFv1zfd28nwpXl3c/3y2zAaf0xGP7+/2wyH419nP4+u41cP/003/zW/p5evux9+/+0X8XD97T1wthThf14Pxx8md5/an4e34/sPPzv97lGxbwjeisiWPYD0WkCUPaRsKuuXIVEaYiK1vWgExmHEAinuxsAiMsfO6clcirUh6LmVtbsN1YMvDQPb+JpKGpElgkpk6u1Z+w1M2audQEiJgQ43pyfZUM84epvMkeu2ikgYtoOH6PQklumC+Vs67e4aZcKDiLprRuROGNF2epAoEyxJGAJZERbaGwnK1BKMBey5LF8q0AKmWs7M3Jky2iFRG+N1X+zrFjS3ibHZgqa0BjTfIvJgPoyspptzdri7dREbLMYA4/F7IKFGyYlmKwSzy8qcxsU54dQ0JOHGMnAMUCkiNzmqO8o1iMVLBausPfxOCVrQbI+MZm2rcFtYLfefG0eCHqHQaCbYhi9Nha4uxyRYkjk+SUAcb7U5okcqJpNiuNhx8IxJK5wKERquT4ZrxaT2zX5YkWhKzJvuXloqTK7yXRcSCkL9VAeV8xVvttKbm2gusyN6E0RrND4H9m4GGFcaCU3FZZdpLeOABsDIbXOxTj3KYXUcViosy7rGF0yaTTNuuKkiNiUadQ1SOZluYd6KhNM0ukkkEq5BzCAU8zTuISDcBOrKuKXglizFd7ai+Too79nYjozIw2eFfa/0dPGTN2+23D1Yuu32fheJ5CSkNnt+rQMckYd7NPmdCT7GoO9VX3TXiMvjyGl2o0mA6UwpzkgSauBJNEVpZqw4idVCaAUzKSI4b3fPstGQRUy3TDK4tGFoCS6rBMAiE7aEp6TnNdO5/Tx6O7z3P96Mbib9hhHRqLy7bBTmws0GJC17bK6sm9cZqYjg34w+3d1PBrcGawe/OHpxXJItWbbb4anvbH+Q4dJKJIwi/5KmuoM/s2jmi5BeGFs/Uov8FsuYrJje1oXOoeLQFsBOXS1os7ag5Poq+wuBMoRDaFUurb9W6ZQmOlH1ZCxugRSJxpZpGVuZP7VgxYhJCa/POxe28WiasVULmqgXZ5myVyESnsSghD0nmdsrvC/aVCyibfjbxHKWVRAvFHOPJJTp9G8nFPMsgKu/CGq3T0/+PwAA//93ks8vcCQAAA=="
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [
              1650228
            ],
            "id": "53919583",
            "ignore_remote_firewall_ids": false,
            "image": "191091671",
            "ipv4_address": "188.245.114.242",
            "ipv6_address": "2a01:4f8:c013:45f2::1",
            "ipv6_network": "2a01:4f8:c013:45f2::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "agent_node"
            },
            "location": "fsn1",
            "name": "k3s-agent-small-cxm",
            "network": [],
            "placement_group_id": 398582,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "23413335"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "nSf2PBW8aaBxjNbiGAVLUzYSuis="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent",
            "module.kube-hetzner.hcloud_placement_group.agent_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.agents.data.cloudinit_config.config",
            "module.kube-hetzner.module.agents.random_string.identity_file",
            "module.kube-hetzner.module.agents.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "mbqqxrrnoldtz6nlpoyk",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "mbqqxrrnoldtz6nlpoyk",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.agents[\"0-0-agent-small\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "cxm",
            "keepers": {
              "name": "k3s-agent-small"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "cxm",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.agent",
            "module.kube-hetzner.hcloud_placement_group.agent"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": true,
            "boundary": "MIMEBOUNDARY",
            "gzip": true,
            "id": "720368041",
            "part": [
              {
                "content": "#cloud-config\r\n\r\ndebug: True\r\n\r\nwrite_files:\r\n\r\n# Script to rename the private interface to eth1 and unify NetworkManager connection naming\r\n- path: /etc/cloud/rename_interface.sh\r\n  content: |\r\n    #!/bin/bash\r\n    set -euo pipefail\r\n\r\n    sleep 11\r\n\r\n    INTERFACE=$(ip link show | awk '/^3:/{print $2}' | sed 's/://g')\r\n    MAC=$(cat /sys/class/net/$INTERFACE/address)\r\n\r\n    cat \u003c\u003cEOF \u003e /etc/udev/rules.d/70-persistent-net.rules\r\n    SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"$MAC\", NAME=\"eth1\"\r\n    EOF\r\n\r\n    ip link set $INTERFACE down\r\n    ip link set $INTERFACE name eth1\r\n    ip link set eth1 up\r\n\r\n    eth0_connection=$(nmcli -g GENERAL.CONNECTION device show eth0)\r\n    nmcli connection modify \"$eth0_connection\" \\\r\n      con-name eth0 \\\r\n      connection.interface-name eth0\r\n\r\n    eth1_connection=$(nmcli -g GENERAL.CONNECTION device show eth1)\r\n    nmcli connection modify \"$eth1_connection\" \\\r\n      con-name eth1 \\\r\n      connection.interface-name eth1\r\n\r\n    systemctl restart NetworkManager\r\n  permissions: \"0744\"\r\n\r\n# Disable ssh password authentication\r\n- content: |\r\n    Port 22\r\n    PasswordAuthentication no\r\n    X11Forwarding no\r\n    MaxAuthTries 2\r\n    AllowTcpForwarding no\r\n    AllowAgentForwarding no\r\n    AuthorizedKeysFile .ssh/authorized_keys\r\n  path: /etc/ssh/sshd_config.d/kube-hetzner.conf\r\n\r\n# Set reboot method as \"kured\"\r\n- content: |\r\n    REBOOT_METHOD=kured\r\n  path: /etc/transactional-update.conf\r\n\r\n# Create Rancher repo config\r\n- content: |\r\n    [rancher-k3s-common-stable]\r\n    name=Rancher K3s Common (stable)\r\n    baseurl=https://rpm.rancher.io/k3s/stable/common/microos/noarch\r\n    enabled=1\r\n    gpgcheck=1\r\n    repo_gpgcheck=0\r\n    gpgkey=https://rpm.rancher.io/public.key\r\n  path: /etc/zypp/repos.d/rancher-k3s-common.repo\r\n\r\n# Create the kube_hetzner_selinux.te file, that allows in SELinux to not interfere with various needed services\r\n- path: /root/kube_hetzner_selinux.te\r\n  content: |\r\n    module kube_hetzner_selinux 1.0;\r\n\r\n    require {\r\n        type kernel_t, bin_t, kernel_generic_helper_t, iscsid_t, iscsid_exec_t, var_run_t, var_lib_t,\r\n            init_t, unlabeled_t, systemd_logind_t, systemd_hostnamed_t, container_t,\r\n            cert_t, container_var_lib_t, etc_t, usr_t, container_file_t, container_log_t,\r\n            container_share_t, container_runtime_exec_t, container_runtime_t, var_log_t, proc_t, io_uring_t, fuse_device_t, http_port_t,\r\n            container_var_run_t;\r\n        class key { read view };\r\n        class file { open read execute execute_no_trans create link lock rename write append setattr unlink getattr watch };\r\n        class sock_file { watch write create unlink };\r\n        class unix_dgram_socket create;\r\n        class unix_stream_socket { connectto read write };\r\n        class dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write watch };\r\n        class lnk_file { read create };\r\n        class system module_request;\r\n        class filesystem associate;\r\n        class bpf map_create;\r\n        class io_uring sqpoll;\r\n        class anon_inode { create map read write };\r\n        class tcp_socket name_connect;\r\n        class chr_file { open read write };\r\n    }\r\n\r\n    #============= kernel_generic_helper_t ==============\r\n    allow kernel_generic_helper_t bin_t:file execute_no_trans;\r\n    allow kernel_generic_helper_t kernel_t:key { read view };\r\n    allow kernel_generic_helper_t self:unix_dgram_socket create;\r\n\r\n    #============= iscsid_t ==============\r\n    allow iscsid_t iscsid_exec_t:file execute;\r\n    allow iscsid_t var_run_t:sock_file write;\r\n    allow iscsid_t var_run_t:unix_stream_socket connectto;\r\n\r\n    #============= init_t ==============\r\n    allow init_t unlabeled_t:dir { add_name remove_name rmdir search };\r\n    allow init_t unlabeled_t:lnk_file create;\r\n    allow init_t container_t:file { open read };\r\n    allow init_t container_file_t:file { execute execute_no_trans };\r\n    allow init_t fuse_device_t:chr_file { open read write };\r\n    allow init_t http_port_t:tcp_socket name_connect;\r\n\r\n    #============= systemd_logind_t ==============\r\n    allow systemd_logind_t unlabeled_t:dir search;\r\n\r\n    #============= systemd_hostnamed_t ==============\r\n    allow systemd_hostnamed_t unlabeled_t:dir search;\r\n\r\n    #============= container_t ==============\r\n    allow container_t { cert_t container_log_t }:dir read;\r\n    allow container_t { cert_t container_log_t }:lnk_file read;\r\n    allow container_t cert_t:file { read open };\r\n    allow container_t container_var_lib_t:file { create open read write rename lock setattr getattr unlink };\r\n    allow container_t etc_t:dir { add_name remove_name write create setattr watch };\r\n    allow container_t etc_t:file { create setattr unlink write };\r\n    allow container_t etc_t:sock_file { create unlink };\r\n    allow container_t usr_t:dir { add_name create getattr link lock read rename remove_name reparent rmdir setattr unlink search write };\r\n    allow container_t usr_t:file { append create execute getattr link lock read rename setattr unlink write };\r\n    allow container_t container_file_t:file { open read write append getattr setattr lock };\r\n    allow container_t container_file_t:sock_file watch;\r\n    allow container_t container_log_t:file { open read write append getattr setattr watch };\r\n    allow container_t container_share_t:dir { read write add_name remove_name };\r\n    allow container_t container_share_t:file { read write create unlink };\r\n    allow container_t container_runtime_exec_t:file { read execute execute_no_trans open };\r\n    allow container_t container_runtime_t:unix_stream_socket { connectto read write };\r\n    allow container_t kernel_t:system module_request;\r\n    allow container_t var_log_t:dir { add_name write remove_name watch read };\r\n    allow container_t var_log_t:file { create lock open read setattr write unlink getattr };\r\n    allow container_t var_lib_t:dir { add_name write read };\r\n    allow container_t var_lib_t:file { create lock open read setattr write getattr };\r\n    allow container_t proc_t:filesystem associate;\r\n    allow container_t self:bpf map_create;\r\n    allow container_t self:io_uring sqpoll;\r\n    allow container_t io_uring_t:anon_inode { create map read write };\r\n    allow container_t container_var_run_t:dir { add_name remove_name write };\r\n    allow container_t container_var_run_t:file { create open read rename unlink write };\r\n\r\n# Create the k3s registries file if needed\r\n\r\n# Create k3s registries file\r\n- content: IA==\r\n  encoding: base64\r\n  path: /etc/rancher/k3s/registries.yaml\r\n\r\n\r\n# Apply new DNS config\r\n\r\n# Set prepare for manual dns config\r\n- content: |\r\n    [main]\r\n    dns=none\r\n  path: /etc/NetworkManager/conf.d/dns.conf\r\n\r\n- content: |\r\n        nameserver 1.1.1.1\r\n        nameserver 8.8.8.8\r\n        nameserver 2606:4700:4700::1111\r\n    \r\n  path: /etc/resolv.conf\r\n  permissions: '0644'\r\n\r\n\r\n\r\n# Add ssh authorized keys\r\nssh_authorized_keys:\r\n  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID5zEmSLuMJHOyEESYfJMDp6xWdyQgRd471KjZVoxDzH nikol@DESKTOP-UENSRKJ\n\r\n\r\n# Resize /var, not /, as that's the last partition in MicroOS image.\r\ngrowpart:\r\n    devices: [\"/var\"]\r\n\r\n# Make sure the hostname is set correctly\r\nhostname: k3s-control-plane-fsn1-cok\r\npreserve_hostname: true\r\n\r\nruncmd:\r\n\r\n# ensure that /var uses full available disk size, thanks to btrfs this is easy\r\n- [btrfs, 'filesystem', 'resize', 'max', '/var']\r\n\r\n# SELinux permission for the SSH alternative port\r\n\r\n\r\n# Create and apply the necessary SELinux module for kube-hetzner\r\n- [checkmodule, '-M', '-m', '-o', '/root/kube_hetzner_selinux.mod', '/root/kube_hetzner_selinux.te']\r\n- ['semodule_package', '-o', '/root/kube_hetzner_selinux.pp', '-m', '/root/kube_hetzner_selinux.mod']\r\n- [semodule, '-i', '/root/kube_hetzner_selinux.pp']\r\n- [setsebool, '-P', 'virt_use_samba', '1']\r\n- [setsebool, '-P', 'domain_kernel_load_modules', '1']\r\n\r\n# Disable rebootmgr service as we use kured instead\r\n- [systemctl, disable, '--now', 'rebootmgr.service']\r\n\r\n\r\n# Set the dns manually\r\n- [systemctl, 'reload', 'NetworkManager']\r\n\r\n\r\n# Bounds the amount of logs that can survive on the system\r\n- [sed, '-i', 's/#SystemMaxUse=/SystemMaxUse=3G/g', /etc/systemd/journald.conf]\r\n- [sed, '-i', 's/#MaxRetentionSec=/MaxRetentionSec=1week/g', /etc/systemd/journald.conf]\r\n\r\n# Reduces the default number of snapshots from 2-10 number limit, to 4 and from 4-10 number limit important, to 2\r\n- [sed, '-i', 's/NUMBER_LIMIT=\"2-10\"/NUMBER_LIMIT=\"4\"/g', /etc/snapper/configs/root]\r\n- [sed, '-i', 's/NUMBER_LIMIT_IMPORTANT=\"4-10\"/NUMBER_LIMIT_IMPORTANT=\"3\"/g', /etc/snapper/configs/root]\r\n\r\n# Allow network interface\r\n- [chmod, '+x', '/etc/cloud/rename_interface.sh']\r\n\r\n# Restart the sshd service to apply the new config\r\n- [systemctl, 'restart', 'sshd']\r\n\r\n# Make sure the network is up\r\n- [systemctl, restart, NetworkManager]\r\n- [systemctl, status, NetworkManager]\r\n- [ip, route, add, default, via, '172.31.1.1', dev, 'eth0']\r\n\r\n# Cleanup some logs\r\n- [truncate, '-s', '0', '/var/log/audit/audit.log']\r\n\r\n\r\n",
                "content_type": "text/cloud-config",
                "filename": "init.cfg",
                "merge_type": null
              }
            ],
            "rendered": "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"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "hcloud_server",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [
              1650228
            ],
            "id": "53919582",
            "ignore_remote_firewall_ids": false,
            "image": "191091671",
            "ipv4_address": "168.119.159.17",
            "ipv6_address": "2a01:4f8:c013:2f93::1",
            "ipv6_network": "2a01:4f8:c013:2f93::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "cluster": "k3s",
              "engine": "k3s",
              "provisioner": "terraform",
              "role": "control_plane_node"
            },
            "location": "fsn1",
            "name": "k3s-control-plane-fsn1-cok",
            "network": [],
            "placement_group_id": 398583,
            "primary_disk_size": 40,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx22",
            "shutdown_before_deletion": false,
            "ssh_keys": [
              "23413335"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "V+OUpAe6YKjIvtD1IR6Y+eYi/QA="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.kube-hetzner.data.hcloud_image.microos_arm_snapshot",
            "module.kube-hetzner.data.hcloud_image.microos_x86_snapshot",
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.data.hcloud_ssh_keys.keys_by_selector",
            "module.kube-hetzner.hcloud_firewall.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane_named",
            "module.kube-hetzner.hcloud_ssh_key.k3s",
            "module.kube-hetzner.module.control_planes.data.cloudinit_config.config",
            "module.kube-hetzner.module.control_planes.random_string.identity_file",
            "module.kube-hetzner.module.control_planes.random_string.server"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "identity_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "0y6x0t7vjt0h0ew4b0fy",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "0y6x0t7vjt0h0ew4b0fy",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    },
    {
      "module": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"]",
      "mode": "managed",
      "type": "random_string",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "cok",
            "keepers": {
              "name": "k3s-control-plane-fsn1"
            },
            "length": 3,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": false,
            "numeric": false,
            "override_special": null,
            "result": "cok",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.kube-hetzner.data.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network.k3s",
            "module.kube-hetzner.hcloud_network_subnet.control_plane",
            "module.kube-hetzner.hcloud_placement_group.control_plane"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.control_planes.var.zram_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"].var.zram_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.base_domain",
      "status": "unknown",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.base_domain",
          "status": "unknown"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.longhorn_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.longhorn_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ssh_port",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ssh_port",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cni_plugin",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cni_plugin",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.control_planes.var.swap_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.control_planes[\"0-0-control-plane-fsn1\"].var.swap_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.lb_hostname",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.lb_hostname",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.initial_k3s_channel",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.initial_k3s_channel",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_hostname",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_hostname",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.longhorn_fstype",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.longhorn_fstype",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_autoscaler_log_level",
      "status": "unknown",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_autoscaler_log_level",
          "status": "unknown"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_bootstrap_password",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_bootstrap_password",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.dns_servers",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.dns_servers",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.agents.var.swap_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.agents[\"0-0-agent-small\"].var.swap_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.agent_nodepools",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.agent_nodepools",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.rancher_install_channel",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.rancher_install_channel",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.existing_network_id",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.existing_network_id",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_name",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.module.agents.var.zram_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.module.agents[\"0-0-agent-small\"].var.zram_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_max_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_max_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_controller",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_controller",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.ingress_replica_count",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.ingress_replica_count",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.control_plane_nodepools",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.control_plane_nodepools",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cluster_autoscaler_stderr_threshold",
      "status": "unknown",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cluster_autoscaler_stderr_threshold",
          "status": "unknown"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.kube-hetzner.var.cilium_routing_mode",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.kube-hetzner.var.cilium_routing_mode",
          "status": "pass"
        }
      ]
    }
  ]
}
